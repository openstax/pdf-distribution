AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'PDF Distribution'

Parameters:
  EnvName:
    Type: String
    Description: The name of the environment, e.g. 'staging', 'production'

  CertificateArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/certs/wildcard'

  HostedZoneName:
    Description: name of the hosted zone to use
    Type: String
    ConstraintDescription: must be a valid Route53 hosted zone domain; no period at end

  Domain:
    Description: Domain for the distribution, e.g. "openstax.org", configured in Route53
    Type: String
    ConstraintDescription: must be a valid domain name

Conditions:
  # Lambda@Edge functions need to be created in us-east-1; there might be a way
  # to set up other resources in other regions using StackSets, but for now force
  # the region with this condition.
  WrongRegion: !Not [!Equals [!Ref 'AWS::Region', us-east-1]]

Resources:

  Dns:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${HostedZoneName}.'
      RecordSets:
        - Name: !Sub '${Domain}.'
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Indicates CloudFront
            DNSName: !GetAtt 'Distribution.DomainName'

  ViewerRequestLambdaEdgeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../app/src
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Runtime: python3.7
      Handler: viewer_request_lambda_function.lambda_handler
      Timeout: 5
      AutoPublishAlias: live

  ViewerResponseLambdaEdgeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../app/src
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Runtime: python3.7
      Handler: viewer_response_lambda_function.lambda_handler
      Timeout: 5
      AutoPublishAlias: live

  LambdaEdgeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
      Policies:
        - PolicyName: DynamoDbAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: "AllowLambdaToAccessDynamoDbTable"
                Effect: "Allow"
                Action: "dynamodb:GetItem"
                Resource: "arn:aws:dynamodb:*:373045849756:table/kevin-pdfdistro-configs"

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub '${EnvName}-kevin_pdfdistro'
        Aliases:
          - !Ref 'Domain'
        DefaultCacheBehavior:
          LambdaFunctionAssociations:
            - EventType: viewer-request
              LambdaFunctionARN: !Ref ViewerRequestLambdaEdgeFunction.Version
            - EventType: viewer-response
              LambdaFunctionARN: !Ref ViewerResponseLambdaEdgeFunction.Version
          AllowedMethods:
            - 'HEAD'
            - 'GET'
          CachedMethods:
            - 'HEAD'
            - 'GET'
          Compress: false
          DefaultTTL: 10
          MaxTTL: 30
          MinTTL: 0
          ForwardedValues:
            Cookies:
              Forward: 'none'
            Headers:
              - 'CloudFront-Viewer-Country'
            QueryString: false
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: 'redirect-to-https'
        Origins:
          - Id: S3Origin
            DomainName: kevin-pdfdistro.s3.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: origin-access-identity/cloudfront/E271MG7GRTCHSV
        DefaultRootObject: ''
        Enabled: true
        HttpVersion: 'http1.1'
        IPV6Enabled: true
        PriceClass: 'PriceClass_All'
        ViewerCertificate:
          AcmCertificateArn: !Ref 'CertificateArn'
          SslSupportMethod: sni-only
      Tags:
        - Key: Environment
          Value: !Ref 'EnvName'
        - Key: Application
          Value: PdfDistro
        - Key: Project
          Value: PdfDistro
        - Key: Owner
          Value: klb

  # This resource will only be created when trying to deploy in a wrong region
  YouAreInTheWrongRegion:
    Type: "AWS::SSM::Parameter"
    Condition: WrongRegion
    Properties:
      Name: '' # Leave name empty to force a fail
      Type: String

Outputs:
  ViewerRequestLambdaEdgeFunction:
    Description: Lambda@Edge handler for viewer requests
    Value: !Ref ViewerRequestLambdaEdgeFunction.Version
  ViewerResponseLambdaEdgeFunction:
    Description: Lambda@Edge handler for viewer responses
    Value: !Ref ViewerResponseLambdaEdgeFunction.Version
  DistributionId:
    Description: 'Id for our cloudfront distribution'
    Value: !Ref Distribution
  RawDistributionDomainName:
    Description: 'Domain name for our cloudfront distribution'
    Value: !GetAtt Distribution.DomainName
  DistributionDomainName:
    Description: 'Domain name for our cloudfront distribution'
    Value: !Ref Domain

