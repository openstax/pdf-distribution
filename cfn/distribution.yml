AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Buy Print'

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - staging
      - production
    Default: staging
    Description: Environment that can be added to resource names

Resources:

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Metadata:
      Comment: 'Bucket to store code artifacts'
    Properties:
      AccessControl: Private
      BucketName: !Sub 'buy-print-artifacts-${AWS::StackName}-${AWS::AccountId}'

  LambdaEdgeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../.aws-sam/LambdaEdgeFunction/
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Runtime: python3.7
      Handler: lambda_function.lambda_handler
      Timeout: 5
      AutoPublishAlias: live

  LambdaEdgeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub '${Environment} - Content Distribution'
        DefaultCacheBehavior:
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref LambdaEdgeFunction.Version
          AllowedMethods:
            - 'HEAD'
            - 'GET'
          CachedMethods:
            - 'HEAD'
            - 'GET'
          Compress: false
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          ForwardedValues:
            Cookies:
              Forward: 'none'
            Headers:
              - 'CloudFront-Viewer-Country'
            QueryString: false
          TargetOriginId: MainOrigin
          ViewerProtocolPolicy: 'redirect-to-https'
        # DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: 'http1.1'
        IPV6Enabled: true
        # Origins:
        #   - DomainName: !GetAtt ContentsBucket.DomainName
        #     Id: MainOrigin
        #     OriginPath: ''
        #     S3OriginConfig:
        #       OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CfOriginAccessIdentity}'
        PriceClass: 'PriceClass_All'


Outputs:
  LambdaEdgeFunction:
    Description: Lambda@Edge handler for content
    Value: !Ref LambdaEdgeFunction.Version
  DistributionId:
    Description: 'Id for our cloudfront distribution'
    Value: !Ref Distribution
  DistributionDomainName:
    Description: 'Domain name for our cloudfront distribution'
    Value: !GetAtt Distribution.DomainName

